<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.knime.python3.types" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.knime.python3.types" id="PythonExtensionType" name="PythonExtensionType"/>
      </appinfo>
      <documentation>
         [Enter description of this extension point.]
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="PythonPortType"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="PythonPortType">
      <complexType>
         <sequence minOccurs="0" maxOccurs="1">
            <element ref="KnimeToPythonPortObjectConverter" minOccurs="0" maxOccurs="1"/>
            <element ref="PythonToKnimePortObjectConverter" minOccurs="0" maxOccurs="1"/>
         </sequence>
      </complexType>
   </element>

   <element name="KnimeToPythonPortObjectConverter">
      <annotation>
         <documentation>
            Converter that allows to convert a KNIME PortObject written in Java into a corresponding PortObject on the Python side. Consists of the Java implementation and the corresponding Python implementation.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="JavaConverterClass" type="string" use="required">
            <annotation>
               <documentation>
                  The Java implementation of the converter.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.knime.python3.types.port.KnimeToPythonPortObjectConverter"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="PythonModule" type="string" use="required">
            <annotation>
               <documentation>
                  Python module containing the Python implementation of the converter.
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="PythonConverterClass" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the Python class holding the implementation of the converter.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="PythonToKnimePortObjectConverter">
      <complexType>
         <attribute name="JavaConverterClass" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.knime.python3.types.port.PythonToKnimePortObjectConverter"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="PythonModule" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="PythonConverterClass" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
